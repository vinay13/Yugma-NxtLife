"""
Django settings for yugma project.

Generated by 'django-admin startproject' using Django 1.9.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '*do1=a9da4vob8_3-t_qgm%8n0g%gxvdg21jt@o^mum%cb*slk'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []




# CELERY SETTINGS
"""
import celery


BROKER_URL = "redis://127.0.0.1:6379/0"
BROKER_TRANSPORT = 'redis'



CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_RESULT_BACKEND = os.environ.get("CELERY_RESULT_BACKEND", 'redis://redis:6379/0')
""" 

import djcelery
djcelery.setup_loader()
#BROKER_URL = 'django://'

BROKER_URL = "amqp://guest:guest@localhost:5672//"

# Application definition



"""

DJANGO_APPS = (

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    )


THIRD_PARTY_APPS = (

    'djcelery',
    'kombu.transport.django',
    'rest_framework.authtoken',
    'rest_framework',
    'rest_framework_docs',

    )



OUR_APPS = (
            'base',
            'events',
            'accounts',
            'polls',
            'complaints',
            'suggestions',
            'category',
            'homework',
            'devices',
        )


INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + OUR_APPS

"""


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'base',
    'events',
    'accounts',
    'polls',
    'complaints',
    'suggestions',
    'category',
    'homework',
    'devices',
    'djcelery',
    'channels',
    'simple_history',
    'push_notifications',
    'kombu.transport.django',
    'rest_framework.authtoken',
    'rest_framework',
    'rest_framework_docs',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'yugma.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


PUSH_NOTIFICATIONS_SETTINGS = {
        "GCM_API_KEY": "AIzaSyCRmaLDSr6wFLQAJvW-1Eyu1884tA2ghys",
        "APNS_CERTIFICATE": "yugma/Certificates.pem",
}



CHANNEL_LAYERS = {
            
            "default":{
                    "BACKEND":"asgi_redis.RedisChannelLayer",
                    "CONFIG" : {
                                "hosts": [("localhost", 6379)],
                        },
                    "ROUTING": "yugma.routing.channel_routing",
            }
}





"""
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
  
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    )
}


"""

REST_FRAMEWORK = {
    
            'DEFAULT_PAGINATION_CLASS':'rest_framework.pagination.LimitOffsetPagination',
            'PAGE_SIZE' : 1
}


REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': ('rest_framework.filters.DjangoFilterBackend',)
}



WSGI_APPLICATION = 'yugma.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases



DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

"""
import sys
if 'test' in sys.argv or 'test_coverage' in sys.argv: #Covers regular testing and django-coverage
    DATABASES['default']['ENGINE'] = 'django.db.backends.sqlite3'
"""


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
